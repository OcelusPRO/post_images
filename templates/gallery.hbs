<!DOCTYPE html>
<html lang="fr">

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, shrink-to-fit=no">
    <title>FTNL_YT</title>
    <link rel="stylesheet" href="/assets/bootstrap/css/bootstrap.min.css">
    <link rel="stylesheet" href="/assets/fonts/fontawesome-all.min.css">
    <link rel="stylesheet" href="/assets/css/styles.css">
</head>

<body style="background: #0e0e10;">
    <div class="row">
        <div class="col">
            <div class="d-xxl-flex justify-content-xxl-start align-items-xxl-center" style="height: 103px;color: rgb(33, 37, 41);background: #18181B;">
                <div class="row">
                    <div class="col"><img height="103px" width="103px" src="/assets/img/ftnl_cls.png"></div>
                    <div class="col text-center d-xxl-flex justify-content-xxl-center align-items-xxl-center">
                        <h1 style="color: #F6F6F6;">FTNL</h1>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col" style="text-align: center;color: rgb(246,246,246);">
            <h1 class="display-2">Mes images</h1>
        </div>
    </div>
    <hr style="margin: 1%;">
    <section id="sectionImages" class="m-auto" style="width: 90%;">

    </section>
    <hr style="margin: 1%;">
    <script src="/assets/bootstrap/js/bootstrap.min.js"></script>

    <script>
        const filesNames = JSON.parse(`{{{ images }}}`);
        const section = document.getElementById("sectionImages");

        function showElements(files) {
            function makeRaw() {
                const rowTemplate = document.createElement("div");
                rowTemplate.classList.add("row");
                rowTemplate.style.marginRight = "1%";
                rowTemplate.style.marginLeft = "1%";
                return rowTemplate;
            }
            function makeColumn() {
                const colTemplate = document.createElement("div");
                colTemplate.classList.add("col");
                colTemplate.classList.add("d-flex");
                colTemplate.classList.add("d-xxl-flex");
                colTemplate.classList.add("flex-column");
                colTemplate.classList.add("justify-content-xxl-center");
                colTemplate.classList.add("align-items-xxl-center");
                colTemplate.style.padding = "1%";
                return colTemplate;
            }
            function makeInColumn(imgName) {
                const linkElement = document.createElement("a");
                linkElement.href = "/i/" + imgName;

                const inColTemplate = document.createElement("div");
                inColTemplate.classList.add("d-flex");
                inColTemplate.classList.add("flex-column");
                inColTemplate.classList.add("justify-content-xxl-center");
                inColTemplate.classList.add("align-items-xxl-center");
                inColTemplate.style.color = "rgb(246,246,246)";
                inColTemplate.style.background = "#18181B";
                inColTemplate.style.borderRadius = "18px";

                const img = document.createElement("img");
                img.src = `/${imgName}`;
                img.style.maxWidth = "100%";
                img.style.maxHeight = "100%";
                img.style.width = "100%";
                img.loading = "lazy";
                inColTemplate.appendChild(img);

                const h2 = document.createElement("h2");
                h2.style.color = "rgb(246,246,246)";
                h2.style.maxHeight = "100%";
                h2.innerHTML = imgName;
                inColTemplate.appendChild(h2);

                linkElement.appendChild(inColTemplate);

                return linkElement;
            }

            section.innerHTML = "";
            const mapElements = [];
            let currentTreatment = [];

            files.forEach( e => {
                currentTreatment.push(e);
                if (currentTreatment.length >= 3) {
                    mapElements.push(currentTreatment);
                    currentTreatment = [];
                }
            });
            mapElements.push(currentTreatment);

            mapElements.forEach( e => {
                const row = makeRaw();
                e.forEach( e => {
                    const col = makeColumn();
                    const inCol = makeInColumn(e);
                    col.appendChild(inCol);
                    row.appendChild(col);
                });
                section.appendChild(row);
            });
        }

        showElements(filesNames);
    </script>

</body>

</html>